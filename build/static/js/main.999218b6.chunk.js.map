{"version":3,"sources":["api/index.js","components/SearchBar.js","components/Card.js","components/SearchResults.js","components/DeckList.js","index.js"],"names":["fetchCards","a","name","text","axios","get","data","cards","SearchBar","setResults","useState","setName","setText","event","preventDefault","id","onSubmit","type","placeholder","value","onChange","target","Card","manaCost","flavor","imageUrl","addCardToDeck","removeCardFromDeck","className","src","onClick","SearchResults","results","length","map","result","DeckList","deck","cardCount","reduce","card","count","App","setDeck","nextDeck","index","findIndex","push","splice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.999218b6.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport async function fetchCards({ name, text }) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `https://api.magicthegathering.io/v1/cards?name=${name}&text=${text}`\r\n    );\r\n\r\n    return data.cards || [];\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport { fetchCards } from \"../api\";\r\n\r\nconst SearchBar = ({ setResults }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleTextChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const cards = await fetchCards({\r\n      name,\r\n      text,\r\n    });\r\n\r\n    setResults(cards);\r\n  }\r\n\r\n  return (\r\n    <div id=\"search\">\r\n      <h3>Look up cards here...</h3>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"card name\"\r\n          value={name}\r\n          onChange={handleNameChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"card text\"\r\n          value={text}\r\n          onChange={handleTextChange}\r\n        />\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n\r\nconst Card = ({\r\n  id,\r\n  name,\r\n  type,\r\n  manaCost,\r\n  text,\r\n  flavor,\r\n  imageUrl,\r\n  addCardToDeck,\r\n  removeCardFromDeck,\r\n}) => {\r\n  return (\r\n    <div className=\"Card\">\r\n      <div className=\"info\">\r\n        <p className=\"header\">\r\n          {name} - {manaCost}\r\n        </p>\r\n        <p className=\"type\">{type}</p>\r\n        <p className=\"text\">{text}</p>\r\n        <p className=\"flavor\">{flavor}</p>\r\n      </div>\r\n      <img className=\"preview\" src={imageUrl} />\r\n      <div className=\"actions\">\r\n        <button\r\n          onClick={() => {\r\n            addCardToDeck({\r\n              id,\r\n              name,\r\n            });\r\n          }}\r\n        >\r\n          (+) Add to Deck\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            removeCardFromDeck({\r\n              id,\r\n            });\r\n          }}\r\n        >\r\n          (-) Remove from Deck\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport Card from \"./Card\";\r\nimport \"./SearchResults.css\";\r\n\r\nconst SearchResults = ({ results, addCardToDeck, removeCardFromDeck }) => {\r\n  return (\r\n    <div id=\"results\">\r\n      <h3>Here's what we found ({results.length} results):</h3>\r\n      <div className=\"CardList\">\r\n        {results.map((result) => (\r\n          <Card\r\n            key={result.id}\r\n            addCardToDeck={addCardToDeck}\r\n            removeCardFromDeck={removeCardFromDeck}\r\n            {...result}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React from \"react\";\r\n\r\nconst DeckList = ({ deck, addCardToDeck, removeCardFromDeck }) => {\r\n  let cardCount = deck.reduce((cardCount, card) => {\r\n    return cardCount + card.count;\r\n  }, 0);\r\n\r\n  return (\r\n    <div id=\"deck\">\r\n      <h3>Your deck so far ({cardCount} cards):</h3>\r\n      <div className=\"DeckList\">\r\n        {deck.map(({ id, name, count }) => (\r\n          <p key={id}>\r\n            <span>\r\n              ({count}x) {name}\r\n            </span>\r\n            <br />\r\n            <button onClick={() => addCardToDeck({ id, name })}> + </button>\r\n            <button onClick={() => removeCardFromDeck({ id })}> - </button>\r\n          </p>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeckList;\r\n","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { DeckList, SearchBar, SearchResults } from \"./components\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst App = () => {\r\n  const [results, setResults] = useState([]);\r\n  const [deck, setDeck] = useState([]);\r\n\r\n  const addCardToDeck = ({ id, name }) => {\r\n    const nextDeck = [...deck]; // make a duplicate first\r\n    const index = nextDeck.findIndex((card) => card.id === id);\r\n\r\n    // index will be -1 if it is not found\r\n    if (index > -1) {\r\n      nextDeck[index].count += 1;\r\n    } else {\r\n      nextDeck.push({\r\n        id,\r\n        name,\r\n        count: 1,\r\n      });\r\n    }\r\n\r\n    setDeck(nextDeck);\r\n  };\r\n\r\n  const removeCardFromDeck = ({ id }) => {\r\n    const nextDeck = [...deck];\r\n    const index = nextDeck.findIndex((card) => card.id === id);\r\n\r\n    if (index === -1) {\r\n      // don't do anything if we're trying to remove a card not in the deck\r\n      return;\r\n    }\r\n\r\n    if (nextDeck[index].count === 1) {\r\n      // remove the card altogether\r\n      nextDeck.splice(index, 1);\r\n    } else {\r\n      // decrement the count\r\n      nextDeck[index].count -= 1;\r\n    }\r\n\r\n    setDeck(nextDeck);\r\n  };\r\n\r\n  return (\r\n    <div id=\"app\">\r\n      <SearchBar setResults={setResults} />\r\n      <SearchResults\r\n        results={results}\r\n        addCardToDeck={addCardToDeck}\r\n        removeCardFromDeck={removeCardFromDeck}\r\n      />\r\n      <DeckList\r\n        deck={deck}\r\n        addCardToDeck={addCardToDeck}\r\n        removeCardFromDeck={removeCardFromDeck}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}